version: "3.7"
# I use this funky volume to prevent my host node_modules
# from being mounted in the guest
volumes:
  node_modules:
  pg_data:
    # External here indicates that the user must have
    # created this volume independently. It must exist
    # if you want to bring these services that depend
    # on it up. (Postgres in production depends on this
    # volume for persistence.
    # See https://docs.docker.com/engine/admin/volumes/volumes/
    # docker volume create my-vol
    external: true
    name: ${PG_DATA_VOLUME_NAME}
services:
  db:
    image: postgres:11.5
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
  traffic:
    build: browser
    entrypoint: "/app/generate-traffic.sh"
    volumes:
      - "./browser:/app"
      - "node_modules/:/app/node_modules/"
    environment:
      - JWT=${JWT}
      - SALT=${SALT}
      - CLASS_URL=${CLASS_URL}
      - CLASS_NUMBER=${CLASS_NUMBER}
      - CLICK_THROUGH_PROB_MEAN=${CLICK_THROUGH_PROB_MEAN}
      - CLICK_THROUGH_PROB_STDDEV=${CLICK_THROUGH_PROB_STDDEV}
      - DONATION_PROB_MEAN=${DONATION_PROB_MEAN}
      - DONATION_PROB_STDDEV=${DONATION_PROB_STDDEV}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
  screenshots:
    build: browser
    entrypoint: "/app/take-screenshots.sh"
    volumes:
      - "./browser:/app"
      - "node_modules/:/app/node_modules/"
    environment:
      - JWT=${JWT}
      - SALT=${SALT}
      - CLASS_URL=${CLASS_URL}
      - CLASS_NUMBER=${CLASS_NUMBER}
      - CLICK_THROUGH_PROB_MEAN=${CLICK_THROUGH_PROB_MEAN}
      - CLICK_THROUGH_PROB_STDDEV=${CLICK_THROUGH_PROB_STDDEV}
      - DONATION_PROB_MEAN=${DONATION_PROB_MEAN}
      - DONATION_PROB_STDDEV=${DONATION_PROB_STDDEV}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
